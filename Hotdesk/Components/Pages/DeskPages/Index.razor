@page "/desks"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Hotdesk.Components.Models
@using Hotdesk.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Hotdesk.Data.HotdeskContext> DbFactory

<PageTitle>Hotdesk | Desks</PageTitle>

<h1>Desks</h1>

<p>
    <a href="desks/create">Create New</a>
</p>

<QuickGrid Class="table" Items="@(desks.AsQueryable())">
    <PropertyColumn Property="desk => desk.Id" Title="Desk ID" />
    <PropertyColumn Property="desk => desk.Name" />
    <PropertyColumn Property="desk => desk.Location" />
    <PropertyColumn Property="desk => desk.HasMonitor" />
    <PropertyColumn Property="desk => desk.IsAvailable" />
    <PropertyColumn Property="desk => desk.Description" />

    <TemplateColumn Context="desk">
        <a href="@($"desks/edit?id={desk.Id}")">Edit</a> |
        <a href="@($"desks/details?id={desk.Id}")">Details</a> |
        <a href="@($"desks/delete?id={desk.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private HotdeskContext context = default!;
    private List<Desk> desks = new();

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        desks = await context.Desk.ToListAsync(); // Fetch desks from the database
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}


